<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 mybatis에서 처리할 sql문을 작성하는 문서입니다. -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- <mapper>태그의 _namespace 속성은 Java소스에서 실행할 SQL문을 호출할 때 같이 사용되는 이름이다. -->
<mapper namespace="chat">
	<insert id="insertChatRoom" parameterType="chatroomVo">
		insert into chatroom values(CHATROOM_SEQ.nextval,#{tboard_id},#{mem_id},sysdate)
	</insert>
	<select id="selectChatRoomByRid" parameterType="long" resultType="chatroomVo">
		select * from chatroom where room_id=#{room_id}
	</select>
	<select id="selectChatRoomByTid" parameterType="long" resultType="chatroomVo">
		select * from chatroom where tboard_id=#{tboard_id}
	</select>
	<select id="selectChatRoomListByMid" parameterType="String" resultType="chatroomVo">
		select * from chatroom where chatroom.mem_id=#{mem_id} or tboard_id in(select tboard_id from tboard where tboard.mem_id=#{mem_id} )
	</select>
	<select id="selectLastMessageByRid" parameterType="Long" resultType="chatmessageVo">
		select *
		from (select * from chatmessage where room_id=#{room_id} order by message_cdate desc)
		where rownum=1 
	</select>
	<select id="selectNoReadMessageCnt" parameterType="map" resultType="int">
		select count(*) from chatmessage 
		where room_id=#{room_id} and mem_id !=#{mem_id} and message_isread='n'
	</select>
	<select id="selectChatMessageByRoomId" parameterType="Long" resultType="chatmessageVo">
		select * from chatmessage where room_id=#{room_id} order by message_cdate
	</select>
	
	<update id="updateChatRead" parameterType="map">
		update chatmessage set message_isread='y' where room_id=#{room_id} and mem_id!=#{mem_id}
	</update>
	<insert id="insertChatMessage" parameterType="chatmessageVo">
		insert into chatmessage values(chatmessage_seq.nextval,#{message_content},#{message_isread},sysdate
		,#{room_id},#{mem_id})
		
		<selectKey resultType="Long" keyProperty="message_id">
	 		SELECT chatmessage_SEQ.CURRVAL from dual
	 	</selectKey> 
	</insert>
</mapper>

