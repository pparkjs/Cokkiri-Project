<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="tcomment">
<!-- 댓글 작성 -->
<insert id="insertTcomment" parameterType="tcommentVo">
	  insert into tcomment
	    (tcomment_id, tcomment_pid, tboard_id, mem_id, tcomment_content, tcomment_cdate, tcomment_secret, tcomment_isremove)
	    values
	    (TCOMMENT_SEQ.nextval, #{tcomment_pid}, #{tboard_id}, #{mem_id}, #{tcomment_content}, SYSDATE, #{tcomment_secret}, 'n')
	    <!-- <selectKey resultType="int" keyProperty="tcomment_id">
	    	select tcomment_seq.currval from dual
	    </selectKey> -->
</insert>
<!--  -->
<select id="getTcomment" resultType="tcommentVo" parameterType="int">
	select * from tcomment where tcomment_id=#{tcomment_id}
</select>

<!-- 댓글 리스트  -->
<select id="getAllTcomment" resultType="tcommentVo" parameterType="int">
  
  <![CDATA[
  SELECT rownum rn, level, tcomment_id, tcomment_pid, tboard_id, mem_id, tcomment_content,
      CASE
        WHEN (SYSDATE - tcomment_cdate) * 24 * 60 * 60 < 60 THEN '방금전'
        WHEN (SYSDATE - tcomment_cdate) * 24 * 60 * 60 < 60 * 60 THEN CONCAT(FLOOR((SYSDATE - tcomment_cdate) * 24 * 60 * 60 / 60), '분전')
        WHEN (SYSDATE - tcomment_cdate) * 24 * 60 * 60 < 24 * 60 * 60 THEN CONCAT(FLOOR((SYSDATE - tcomment_cdate) * 24 * 60 * 60 / (60 * 60)), '시간전')
        ELSE TO_CHAR(tcomment_cdate, 'YYYY-MM-DD HH24:MI:SS')
      END
     AS tcomment_cdate,
    tcomment_secret, tcomment_isremove
  FROM tcomment
  WHERE tboard_id =48
  START WITH tcomment_pid = 0
  CONNECT BY PRIOR tcomment_id = tcomment_pid
  ORDER SIBLINGS BY tcomment_cdate, tcomment_id DESC
    ]]>
</select>

<!-- 댓글 수 -->
<select id="countTcomment" resultType="int" parameterType="int">
	select count(*) from tcomment where tboard_id = #{tboard_id} 
</select>

<!-- 댓글 수정 -->
<update id="updateTcomment" parameterType="tcommentVo">
	update tcomment 
		set tcomment_content = #{tcomment_content}, tcomment_cdate = sysdate 
		where tcomment_id = #{tcomment_id} and mem_id = #{mem_id}
</update> 

<!-- 댓글 삭제 -->
<!-- <delete id="deleteTcomment" >

</delete> -->

<!-- 댓글 수정시 삭제여부 -->
<update id="updateIsremove" parameterType="int">
	UPDATE tcomment SET tcomment_isremove = 'y' WHERE tcomment_id = #{tcomment_id}
</update>

<!-- level이 2인 댓글 리스트 -->
<select id="levelSelectTcomment" parameterType="tcommentVo">
	select * from (
  SELECT rownum rn, level, tcomment_id, tcomment_pid, tboard_id, mem_id, tcomment_content, tcomment_cdate, tcomment_secret, tcomment_isremove
  FROM tcomment
  where tboard_id = #{tboard_id} and level > 1
  START WITH tcomment_pid = 0
  CONNECT BY PRIOR tcomment_id = tcomment_pid 
  ORDER SIBLINGS BY tcomment_cdate , tcomment_id DESC);
</select> 
</mapper>

